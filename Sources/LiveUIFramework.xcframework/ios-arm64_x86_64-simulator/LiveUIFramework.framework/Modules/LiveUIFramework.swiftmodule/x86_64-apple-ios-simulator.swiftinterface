// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name LiveUIFramework
import Foundation
@_exported import LiveUIFramework
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct RowListTokens {
  public init(tokens: LiveUIFramework.RowItemTokens, atom: LiveUIFramework.Atom)
}
public struct RowItem : SwiftUI.View {
  public init(tokens: LiveUIFramework.RowItemTokens, data: LiveUIFramework.RowItemData, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework7RowItemV4bodyQrvp", 0) __
}










public struct VerticalCardLaneTokens {
  public init(background: LiveUIFramework.Atom?, tokens: LiveUIFramework.VerticalCardTokens)
}
public struct RadioButton : SwiftUI.View {
  public init(data: LiveUIFramework.RadioButtonData, tokens: LiveUIFramework.RadioButtonTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework11RadioButtonV4bodyQrvp", 0) __
}


public struct ProfileNavigationItemTokens {
  public init(background: LiveUIFramework.Atom?, leadingSlot: LiveUIFramework.Molecule?, centerSlot: [LiveUIFramework.Molecule], trailingSlot: LiveUIFramework.Molecule?)
}
public struct InlinePicker : SwiftUI.View {
  public init(selection: SwiftUI.Binding<Swift.String>, inputs: [Swift.String], data: LiveUIFramework.InlinePickerData, tokens: LiveUIFramework.InlinePickerTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework12InlinePickerV4bodyQrvp", 0) __
}

public struct RowListData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, data: [LiveUIFramework.RowItemData])
  public typealias ID = Swift.String
}
public struct VerticalCardLaneData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, data: [LiveUIFramework.VerticalCardData])
  public typealias ID = Swift.String
}

public struct SecureTextInput : SwiftUI.View {
  public init(isSecure: Swift.Bool, userInput: SwiftUI.Binding<Swift.String>, data: LiveUIFramework.SecureTextInputData, tokens: LiveUIFramework.SecureTextInputTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework15SecureTextInputV4bodyQrvp", 0) __
}

public struct Atom : Swift.Codable, Swift.Hashable {
  public init(itemName: Swift.String? = nil, type: Swift.String? = nil, version: Swift.String? = nil, cornerRadiusTopRight: Swift.Int? = nil, cornerRadiusTopLeft: Swift.Int? = nil, cornerRadiusBottomRight: Swift.Int? = nil, cornerRadiusBottomLeft: Swift.Int? = nil, paddingLeft: Swift.Int? = nil, paddingTop: Swift.Int? = nil, paddingRight: Swift.Int? = nil, paddingBottom: Swift.Int? = nil, width: Swift.Int? = nil, relativeWidth: CoreFoundation.CGFloat? = nil, height: Swift.Int? = nil, relativeHeight: CoreFoundation.CGFloat? = nil, fill: Swift.String? = nil, opacity: CoreFoundation.CGFloat? = nil, stroke: Swift.String? = nil, strokeWidth: Swift.Int? = nil, strokeOpacity: CoreFoundation.CGFloat? = nil, backgroundColor: Swift.String? = nil, focusColor: Swift.String? = nil, objectId: Swift.String? = nil, font: Swift.String? = nil, fontSize: Swift.String? = nil, fontWeight: Swift.String? = nil, alignment: Swift.String? = nil, multilineAlignment: Swift.String? = nil, aspectRatioType: Swift.String? = nil)
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: LiveUIFramework.Atom, b: LiveUIFramework.Atom) -> Swift.Bool
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}

public struct ProgressTokens {
  public init(centerSlot: LiveUIFramework.Molecule?)
}
public struct ProfileNavigationItemData {
  public init(leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
}
public struct VerticalCardRowTokens {
  public init(background: LiveUIFramework.Atom?, tokens: [LiveUIFramework.VerticalCardTokens])
}
public struct ImageCardData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, background: [Swift.String], leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
  public typealias ID = Swift.String
}
public struct InlinePickerData {
  public init(leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
}
public struct FilterTabBarTokens {
  public init(background: LiveUIFramework.Atom?, centerSlot: LiveUIFramework.Molecule)
}
public struct TextInputTokens {
  public init(background: LiveUIFramework.Molecule?, leadingSlot: LiveUIFramework.Molecule?, centerSlot: LiveUIFramework.Molecule?, trailingSlot: LiveUIFramework.Molecule?)
}
public struct InlinePickerTokens {
  public init(background: LiveUIFramework.Molecule?, leadingSlot: LiveUIFramework.Molecule?, centerSlot: LiveUIFramework.Molecule?, trailingSlot: LiveUIFramework.Molecule?)
}
public struct VerticalCardLane : SwiftUI.View {
  public init(data: LiveUIFramework.VerticalCardLaneData, tokens: LiveUIFramework.VerticalCardLaneTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework16VerticalCardLaneV4bodyQrvp", 0) __
}

public struct ProfileNavItem : SwiftUI.View {
  public init(data: LiveUIFramework.ProfileNavigationItemData, tokens: LiveUIFramework.ProfileNavigationItemTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework14ProfileNavItemV4bodyQrvp", 0) __
}




public struct SecureTextInputData {
  public init(leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
}


public struct TransactionItemData : Swift.Identifiable {
  public let id: Foundation.UUID
  public init(leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
  public typealias ID = Foundation.UUID
}


public struct VerticalCardRowData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, data: [LiveUIFramework.VerticalCardData])
  public typealias ID = Swift.String
}
public struct TextInput : SwiftUI.View {
  public init(userInput: SwiftUI.Binding<Swift.String>, data: LiveUIFramework.TextInputData, tokens: LiveUIFramework.TextInputTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework9TextInputV4bodyQrvp", 0) __
}




public struct ImageCard : SwiftUI.View {
  public init(tokens: LiveUIFramework.ImageCardTokens, data: LiveUIFramework.ImageCardData, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework9ImageCardV4bodyQrvp", 0) __
}









public struct SecureTextInputTokens {
  public init(background: LiveUIFramework.Molecule?, leadingSlot: LiveUIFramework.Molecule?, centerSlot: LiveUIFramework.Molecule?, trailingSlot: LiveUIFramework.Molecule?)
}



public struct RowList : SwiftUI.View {
  public init(data: LiveUIFramework.RowListData, tokens: LiveUIFramework.RowListTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework7RowListV4bodyQrvp", 0) __
}

public struct ProgressData {
  public init(progress: Swift.Double, total: Swift.Double)
}
public struct DescriptionCardTokens {
  public init(background: LiveUIFramework.Atom?, leadingSlot: [LiveUIFramework.Molecule], centerSlot: [LiveUIFramework.Molecule], trailingSlot: [LiveUIFramework.Molecule])
}
public struct VerticalCardRow : SwiftUI.View {
  public init(data: LiveUIFramework.VerticalCardRowData, tokens: LiveUIFramework.VerticalCardRowTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework15VerticalCardRowV4bodyQrvp", 0) __
}




public struct ImageCardTokens {
  public init(background: LiveUIFramework.Atom?, leadingSlot: [LiveUIFramework.Molecule], centerSlot: [LiveUIFramework.Molecule], trailingSlot: [LiveUIFramework.Molecule])
}
public struct DescriptionCard : SwiftUI.View {
  public init(tokens: LiveUIFramework.DescriptionCardTokens, data: LiveUIFramework.DescriptionCardData)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework15DescriptionCardV4bodyQrvp", 0) __
}



public struct RapidAppCallback {
  public let key: Swift.String
  public let value: Swift.String
  public init(key: Swift.String, value: Swift.String)
}

public struct Progress : SwiftUI.View {
  public init(data: LiveUIFramework.ProgressData, tokens: LiveUIFramework.ProgressTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework8ProgressV4bodyQrvp", 0) __
}

public struct RadioButtonData {
  public init(id: Swift.String, leadingSlot: Swift.String?, centerSlot: Swift.String?, trailingSlot: [Swift.String], isSelected: Swift.Bool)
}
public struct VerticalCard : SwiftUI.View {
  public init(tokens: LiveUIFramework.VerticalCardTokens, data: LiveUIFramework.VerticalCardData, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework12VerticalCardV4bodyQrvp", 0) __
}










public struct RowItemData {
  public let id: Swift.String?
  public init(id: Swift.String? = UUID().uuidString, centerSlot: [Swift.String])
}
public struct VerticalCardData : Swift.Identifiable {
  public let id: Swift.String?
  public init(id: Swift.String? = UUID().uuidString, leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String], extraSlot1: [Swift.String], extraSlot2: [Swift.String], extraSlot3: [Swift.String], extraSlot4: [Swift.String])
  public typealias ID = Swift.String?
}
public struct VerticalCardTokens {
  public init(background: LiveUIFramework.Atom?, leadingSlot: [LiveUIFramework.Molecule], centerSlot: [LiveUIFramework.Molecule], trailingSlot: [LiveUIFramework.Molecule], extraSlot1: [LiveUIFramework.Molecule], extraSlot2: [LiveUIFramework.Molecule], extraSlot3: [LiveUIFramework.Molecule], extraSlot4: [LiveUIFramework.Molecule])
}
public struct FilterTabBarData : Swift.Identifiable {
  public let id: Swift.String?
  public init(id: Swift.String? = UUID().uuidString, centerSlot: [Swift.String])
  public typealias ID = Swift.String?
}
public struct RowItemTokens {
  public init(centerSlot: [LiveUIFramework.Molecule])
}
public struct CheckButtonTokens {
  public init(background: LiveUIFramework.Atom, leadingSlot: LiveUIFramework.Atom, centerSlot: LiveUIFramework.Atom)
}
public struct TextInputData {
  public init(leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
}


public struct SDK {
  #if compiler(>=5.3) && $AsyncAwait
  public static func configure(email: Swift.String, projectId: Swift.String) async
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public static func configure(apiKey: Swift.String) async
  #endif
  public static func doSomeWork()
  public static func tokens(for label: Swift.String) -> Any?
}
public struct CheckButtonData {
  public init(id: Swift.String, leadingSlot: [Swift.String], centerSlot: Swift.String?, isSelected: Swift.Bool)
}
public struct TransactionListData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, data: [LiveUIFramework.TransactionItemData])
  public typealias ID = Swift.String
}
public struct DescriptionCardData : Swift.Identifiable {
  public let id: Swift.String
  public init(id: Swift.String, leadingSlot: [Swift.String], centerSlot: [Swift.String], trailingSlot: [Swift.String])
  public typealias ID = Swift.String
}
public struct RadioButtonTokens {
  public init(background: LiveUIFramework.Atom, leadingSlot: LiveUIFramework.Atom, centerSlot: LiveUIFramework.Atom, trailingSlot: [LiveUIFramework.Atom])
}
public struct CheckButton : SwiftUI.View {
  public init(data: LiveUIFramework.CheckButtonData, tokens: LiveUIFramework.CheckButtonTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework11CheckButtonV4bodyQrvp", 0) __
}

public struct Molecule {
  public init(id: Swift.String? = nil, type: Swift.String?, atoms: [LiveUIFramework.Atom], structure: Swift.String?, moleculeAtom: LiveUIFramework.Atom)
}
public struct TransactionList : SwiftUI.View {
  public init(data: LiveUIFramework.TransactionListData, tokens: LiveUIFramework.TransactionListTokens)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework15TransactionListV4bodyQrvp", 0) __
}



public struct TransactionListTokens {
  public init(tokens: LiveUIFramework.TransactionItemTokens, atom: LiveUIFramework.Atom)
}
public struct TransactionItem : SwiftUI.View {
  public init(data: LiveUIFramework.TransactionItemData, tokens: LiveUIFramework.TransactionItemTokens, isDivider: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework15TransactionItemV4bodyQrvp", 0) __
}



public struct TransactionItemTokens {
  public init(leadingSlot: LiveUIFramework.Molecule?, centerSlot: [LiveUIFramework.Molecule], trailingSlot: [LiveUIFramework.Molecule], divider: LiveUIFramework.Molecule?)
}
public struct FilterTabBar : SwiftUI.View {
  public init(data: LiveUIFramework.FilterTabBarData, tokens: LiveUIFramework.FilterTabBarTokens, callback: @escaping (LiveUIFramework.RapidAppCallback) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15LiveUIFramework12FilterTabBarV4bodyQrvp", 0) __
}

